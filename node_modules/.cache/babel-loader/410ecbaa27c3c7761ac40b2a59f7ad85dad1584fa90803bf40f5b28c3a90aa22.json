{"ast":null,"code":"import React,{useState}from\"react\";import groupedData from\"./grouped_keyword_data\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function KeywordSearch(){const[query,setQuery]=useState(\"\");const highlight=text=>{if(!query)return text;const parts=text.split(new RegExp(`(${query})`,\"gi\"));return parts.map((part,i)=>part.toLowerCase()===query.toLowerCase()?/*#__PURE__*/_jsx(\"mark\",{style:{backgroundColor:\"#fef08a\",color:\"black\"},children:part},i):/*#__PURE__*/_jsx(\"span\",{children:part},i));};const filteredEntries=Object.entries(groupedData).filter(_ref=>{let[presentation,categories]=_ref;const lowerQuery=query.toLowerCase();return presentation.replace(/^PSSW_/i,'').toLowerCase().includes(lowerQuery)||Object.entries(categories).some(_ref2=>{let[cat,keywords]=_ref2;return cat.toLowerCase().includes(lowerQuery)||keywords.some(kw=>kw.toLowerCase().includes(lowerQuery));});});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1rem\",maxWidth:\"800px\",margin:\"0 auto\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"1.5rem\",fontWeight:\"bold\",marginBottom:\"1rem\"},children:\"Keyword Search (Grouped)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by presentation, keyword, or category...\",value:query,onChange:e=>setQuery(e.target.value),style:{width:\"100%\",padding:\"0.5rem\",marginBottom:\"1.5rem\",fontSize:\"1rem\"}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gap:\"1rem\"},children:[filteredEntries.map(_ref3=>{let[presentation,categories]=_ref3;const cleanName=presentation.replace(/^PSSW_/i,\"\");return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"white\",borderRadius:\"0.5rem\",padding:\"1rem\",boxShadow:\"0 2px 5px rgba(0,0,0,0.1)\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:\"1.125rem\",fontWeight:\"600\",marginBottom:\"0.5rem\"},children:highlight(cleanName)}),Object.entries(categories).map(_ref4=>{let[category,keywords]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"0.5rem\"},children:[/*#__PURE__*/_jsx(\"span\",{style:{border:\"1px solid #ccc\",borderRadius:\"0.25rem\",padding:\"0.25rem 0.5rem\",marginRight:\"0.5rem\",display:\"inline-block\",fontSize:\"0.875rem\"},children:highlight(category)}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:\"0.875rem\"},children:keywords.map((kw,i)=>/*#__PURE__*/_jsxs(\"span\",{children:[highlight(kw),i<keywords.length-1?\", \":\"\"]},i))})]},category);})]},presentation);}),filteredEntries.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"gray\"},children:\"No results found.\"})]})]});}","map":{"version":3,"names":["React","useState","groupedData","jsx","_jsx","jsxs","_jsxs","KeywordSearch","query","setQuery","highlight","text","parts","split","RegExp","map","part","i","toLowerCase","style","backgroundColor","color","children","filteredEntries","Object","entries","filter","_ref","presentation","categories","lowerQuery","replace","includes","some","_ref2","cat","keywords","kw","padding","maxWidth","margin","fontSize","fontWeight","marginBottom","type","placeholder","value","onChange","e","target","width","display","gap","_ref3","cleanName","background","borderRadius","boxShadow","_ref4","category","border","marginRight","length"],"sources":["C:/Users/jht12/Downloads/keyword-search-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport groupedData from \"./grouped_keyword_data\";\n\nexport default function KeywordSearch() {\n  const [query, setQuery] = useState(\"\");\n\n  const highlight = (text) => {\n    if (!query) return text;\n    const parts = text.split(new RegExp(`(${query})`, \"gi\"));\n    return parts.map((part, i) =>\n      part.toLowerCase() === query.toLowerCase() ? (\n        <mark key={i} style={{ backgroundColor: \"#fef08a\", color: \"black\" }}>\n          {part}\n        </mark>\n      ) : (\n        <span key={i}>{part}</span>\n      )\n    );\n  };\n\n  const filteredEntries = Object.entries(groupedData).filter(([presentation, categories]) => {\n    const lowerQuery = query.toLowerCase();\n    return (\n      presentation.replace(/^PSSW_/i, '').toLowerCase().includes(lowerQuery) ||\n      Object.entries(categories).some(([cat, keywords]) =>\n        cat.toLowerCase().includes(lowerQuery) ||\n        keywords.some((kw) => kw.toLowerCase().includes(lowerQuery))\n      )\n    );\n  });\n\n  return (\n    <div style={{ padding: \"1rem\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1 style={{ fontSize: \"1.5rem\", fontWeight: \"bold\", marginBottom: \"1rem\" }}>\n        Keyword Search (Grouped)\n      </h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by presentation, keyword, or category...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        style={{ width: \"100%\", padding: \"0.5rem\", marginBottom: \"1.5rem\", fontSize: \"1rem\" }}\n      />\n      <div style={{ display: \"grid\", gap: \"1rem\" }}>\n        {filteredEntries.map(([presentation, categories]) => {\n          const cleanName = presentation.replace(/^PSSW_/i, \"\");\n          return (\n            <div key={presentation} style={{ background: \"white\", borderRadius: \"0.5rem\", padding: \"1rem\", boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\" }}>\n              <h2 style={{ fontSize: \"1.125rem\", fontWeight: \"600\", marginBottom: \"0.5rem\" }}>\n                {highlight(cleanName)}\n              </h2>\n              {Object.entries(categories).map(([category, keywords]) => (\n                <div key={category} style={{ marginBottom: \"0.5rem\" }}>\n                  <span style={{ border: \"1px solid #ccc\", borderRadius: \"0.25rem\", padding: \"0.25rem 0.5rem\", marginRight: \"0.5rem\", display: \"inline-block\", fontSize: \"0.875rem\" }}>\n                    {highlight(category)}\n                  </span>\n                  <span style={{ fontSize: \"0.875rem\" }}>\n                    {keywords.map((kw, i) => (\n                      <span key={i}>{highlight(kw)}{i < keywords.length - 1 ? \", \" : \"\"}</span>\n                    ))}\n                  </span>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n        {filteredEntries.length === 0 && <div style={{ color: \"gray\" }}>No results found.</div>}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}