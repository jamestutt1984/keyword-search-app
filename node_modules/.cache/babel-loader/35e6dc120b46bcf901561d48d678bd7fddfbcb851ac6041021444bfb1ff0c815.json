{"ast":null,"code":"import React,{useState}from\"react\";import groupedData from\"./grouped_keyword_data\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function KeywordSearch(){const[query,setQuery]=useState(\"\");const[selectedCategory,setSelectedCategory]=useState(\"All\");const allCategories=Array.from(new Set(Object.values(groupedData).flatMap(entry=>Object.keys(entry)))).sort();const highlight=text=>{if(!query)return text;const parts=text.split(new RegExp(`(${query})`,\"gi\"));return parts.map((part,i)=>part.toLowerCase()===query.toLowerCase()?/*#__PURE__*/_jsx(\"mark\",{style:{backgroundColor:\"#fef08a\",color:\"black\"},children:part},i):/*#__PURE__*/_jsx(\"span\",{children:part},i));};const filteredEntries=Object.entries(groupedData).filter(_ref=>{let[presentation,categories]=_ref;const cleanName=presentation.replace(/^PSSW_/i,'').replace('YamamotoRadlinska','Yamamoto/Radlinska').replace('KravetBilen','Kravet/Bilen');const lowerQuery=query.toLowerCase();const matchesQuery=cleanName.toLowerCase().includes(lowerQuery)||Object.entries(categories).some(_ref2=>{let[cat,keywords]=_ref2;return cat.toLowerCase().includes(lowerQuery)||keywords.some(kw=>kw.toLowerCase().includes(lowerQuery));});const matchesCategory=selectedCategory===\"All\"||Object.keys(categories).includes(selectedCategory);return matchesQuery&&matchesCategory;});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1rem\",maxWidth:\"800px\",margin:\"0 auto\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"1.5rem\",fontWeight:\"bold\",marginBottom:\"1rem\"},children:\"Keyword Search (Grouped)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by presentation, keyword, or category...\",value:query,onChange:e=>setQuery(e.target.value),style:{width:\"100%\",padding:\"0.5rem\",marginBottom:\"1rem\",fontSize:\"1rem\"}}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),style:{width:\"100%\",padding:\"0.5rem\",marginBottom:\"1.5rem\",fontSize:\"1rem\"},children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All Categories\"}),allCategories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat,children:cat},cat))]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gap:\"1rem\"},children:[filteredEntries.map(_ref3=>{let[presentation,categories]=_ref3;const cleanName=presentation.replace(/^PSSW_/i,'').replace('YamamotoRadlinska','Yamamoto/Radlinska').replace('KravetBilen','Kravet/Bilen');return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"white\",borderRadius:\"0.5rem\",padding:\"1rem\",boxShadow:\"0 2px 5px rgba(0,0,0,0.1)\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:\"1.125rem\",fontWeight:\"600\",marginBottom:\"0.5rem\"},children:highlight(cleanName)}),Object.entries(categories).filter(_ref4=>{let[category]=_ref4;return selectedCategory===\"All\"||category===selectedCategory;}).map(_ref5=>{let[category,keywords]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"0.5rem\"},children:[/*#__PURE__*/_jsx(\"span\",{style:{border:\"1px solid #ccc\",borderRadius:\"0.25rem\",padding:\"0.25rem 0.5rem\",marginRight:\"0.5rem\",display:\"inline-block\",fontSize:\"0.875rem\"},children:highlight(category)}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:\"0.875rem\"},children:keywords.map((kw,i)=>/*#__PURE__*/_jsxs(\"span\",{children:[highlight(kw),i<keywords.length-1?\", \":\"\"]},i))})]},category);})]},presentation);}),filteredEntries.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"gray\"},children:\"No results found.\"})]})]});}","map":{"version":3,"names":["React","useState","groupedData","jsx","_jsx","jsxs","_jsxs","KeywordSearch","query","setQuery","selectedCategory","setSelectedCategory","allCategories","Array","from","Set","Object","values","flatMap","entry","keys","sort","highlight","text","parts","split","RegExp","map","part","i","toLowerCase","style","backgroundColor","color","children","filteredEntries","entries","filter","_ref","presentation","categories","cleanName","replace","lowerQuery","matchesQuery","includes","some","_ref2","cat","keywords","kw","matchesCategory","padding","maxWidth","margin","fontSize","fontWeight","marginBottom","type","placeholder","value","onChange","e","target","width","display","gap","_ref3","background","borderRadius","boxShadow","_ref4","category","_ref5","border","marginRight","length"],"sources":["C:/Users/jht12/Downloads/keyword-search-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport groupedData from \"./grouped_keyword_data\";\n\nexport default function KeywordSearch() {\n  const [query, setQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n\n  const allCategories = Array.from(\n    new Set(\n      Object.values(groupedData).flatMap((entry) => Object.keys(entry))\n    )\n  ).sort();\n\n  const highlight = (text) => {\n    if (!query) return text;\n    const parts = text.split(new RegExp(`(${query})`, \"gi\"));\n    return parts.map((part, i) =>\n      part.toLowerCase() === query.toLowerCase() ? (\n        <mark key={i} style={{ backgroundColor: \"#fef08a\", color: \"black\" }}>\n          {part}\n        </mark>\n      ) : (\n        <span key={i}>{part}</span>\n      )\n    );\n  };\n\n  const filteredEntries = Object.entries(groupedData).filter(([presentation, categories]) => {\n    const cleanName = presentation\n      .replace(/^PSSW_/i, '')\n      .replace('YamamotoRadlinska', 'Yamamoto/Radlinska')\n      .replace('KravetBilen', 'Kravet/Bilen');\n\n    const lowerQuery = query.toLowerCase();\n    const matchesQuery =\n      cleanName.toLowerCase().includes(lowerQuery) ||\n      Object.entries(categories).some(([cat, keywords]) =>\n        cat.toLowerCase().includes(lowerQuery) ||\n        keywords.some((kw) => kw.toLowerCase().includes(lowerQuery))\n      );\n\n    const matchesCategory =\n      selectedCategory === \"All\" || Object.keys(categories).includes(selectedCategory);\n\n    return matchesQuery && matchesCategory;\n  });\n\n  return (\n    <div style={{ padding: \"1rem\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1 style={{ fontSize: \"1.5rem\", fontWeight: \"bold\", marginBottom: \"1rem\" }}>\n        Keyword Search (Grouped)\n      </h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by presentation, keyword, or category...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        style={{ width: \"100%\", padding: \"0.5rem\", marginBottom: \"1rem\", fontSize: \"1rem\" }}\n      />\n      <select\n        value={selectedCategory}\n        onChange={(e) => setSelectedCategory(e.target.value)}\n        style={{ width: \"100%\", padding: \"0.5rem\", marginBottom: \"1.5rem\", fontSize: \"1rem\" }}\n      >\n        <option value=\"All\">All Categories</option>\n        {allCategories.map((cat) => (\n          <option key={cat} value={cat}>{cat}</option>\n        ))}\n      </select>\n      <div style={{ display: \"grid\", gap: \"1rem\" }}>\n        {filteredEntries.map(([presentation, categories]) => {\n          const cleanName = presentation\n            .replace(/^PSSW_/i, '')\n            .replace('YamamotoRadlinska', 'Yamamoto/Radlinska')\n            .replace('KravetBilen', 'Kravet/Bilen');\n          return (\n            <div key={presentation} style={{ background: \"white\", borderRadius: \"0.5rem\", padding: \"1rem\", boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\" }}>\n              <h2 style={{ fontSize: \"1.125rem\", fontWeight: \"600\", marginBottom: \"0.5rem\" }}>\n                {highlight(cleanName)}\n              </h2>\n              {Object.entries(categories)\n                .filter(([category]) => selectedCategory === \"All\" || category === selectedCategory)\n                .map(([category, keywords]) => (\n                <div key={category} style={{ marginBottom: \"0.5rem\" }}>\n                  <span style={{ border: \"1px solid #ccc\", borderRadius: \"0.25rem\", padding: \"0.25rem 0.5rem\", marginRight: \"0.5rem\", display: \"inline-block\", fontSize: \"0.875rem\" }}>\n                    {highlight(category)}\n                  </span>\n                  <span style={{ fontSize: \"0.875rem\" }}>\n                    {keywords.map((kw, i) => (\n                      <span key={i}>{highlight(kw)}{i < keywords.length - 1 ? \", \" : \"\"}</span>\n                    ))}\n                  </span>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n        {filteredEntries.length === 0 && <div style={{ color: \"gray\" }}>No results found.</div>}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}